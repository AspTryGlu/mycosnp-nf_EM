/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: "${params.publish_dir_mode}",
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: "${params.publish_dir_mode}",
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'GATK4_HAPLOTYPECALLER' {
        publishDir       = [
            enabled: true,
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/samples/${meta.id}/variant_calling/haplotypecaller"},
            pattern: "*{vcf.gz,vcf.gz.tbi}"
        ]
        ext.args         = "-ERC GVCF --sample-ploidy \"${params.sample_ploidy}\" "
        ext.prefix        = {"${meta.id}.g"}
    }


    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: 'copy',
            pattern: '*_versions.yml'
        ]
    }

}


// Subworkflow: bwa-reference

process {

    withName: 'NUCMER' {
        ext.args         = { "--maxmatch --nosimplify" }
        // ext.when      = {   }
        publishDir       = [
            enabled: "${params.save_reference}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/reference/masked" },
            pattern: "*.{coords}"
        ]
    }
     withName: SHOW_COORDS {
        publishDir = [
            path: { "${params.outdir}/reference/masked" },
            mode: "${params.publish_dir_mode}",
            pattern: "*.bed"
        ]
    }
    withName: 'BWA_INDEX' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: "${params.save_reference}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/reference/bwa" },
            pattern: "bwa"
        ]
    }
    withName: 'SAMTOOLS_FAIDX' {
        ext.args         = { "" }
        ext.when         = { }
        publishDir       = [
            enabled: "${params.save_reference}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/reference/fai" },
            pattern: "*fai"
        ]
    }

    withName: 'PICARD_CREATESEQUENCEDICTIONARY' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: "${params.save_reference}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/reference/dict" },
            pattern: "*.{dict}"
        ]
    }

}

// Subworkflow: bwa-pre-process

process {

    withName: 'SEQKIT_PAIR' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: "${params.save_alignment}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/samples/${meta.id}/seqkit_pair" },
            pattern: "*.fastq.gz"
        ]
    }
    withName: 'SEQTK_SAMPLE' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: "${params.save_alignment}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/samples/${meta.id}/seqkit_sample" },
            pattern: "*.fastq.gz"
        ]
    }
    withName: 'FAQCS' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: "${params.save_alignment}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/samples/${meta.id}/faqcs" },
            pattern: "*.fastq.gz"
        ]
    }

    withName: 'BWA_MEM' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: "${params.save_alignment}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/samples/${meta.id}/bwamem" },
            pattern: "*.bam"
        ]
    }
    withName: 'PICARD_MARKDUPLICATES' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: "${params.save_alignment}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/samples/${meta.id}/picard_markduplicates" },
            pattern: "*.bam"
        ]
    }
    withName: 'PICARD_CLEANSAM' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: "${params.save_alignment}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/samples/${meta.id}/picard_cleansam" },
            pattern: "*.sam"
        ]
    }
    withName: 'SAMTOOLS_VIEW' {
        ext.args         = { "-S -b" }
        ext.when         = {  }
        publishDir       = [
            enabled: "${params.save_alignment}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/samples/${meta.id}/samtobam" },
            pattern: "*.sam"
        ]
    }


    withName: 'FASTQC' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: "${params.save_alignment}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/samples/${meta.id}/fastqc" },
            pattern: "*"
        ]
    }
    withName: 'SAMTOOLS_INDEX' {
        ext.args         = { "" }
        ext.when         = {  }
        publishDir       = [
            enabled: "${params.save_alignment}",
            mode: "${params.publish_dir_mode}",
            path: { "${params.outdir}/samples/${meta.id}/bwamem" },
            pattern: "*.bai"
        ]
    }
}

// Subworkflow: gatk-variants

process {


}
